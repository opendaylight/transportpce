{
  "comments": [
    {
      "key": {
        "uuid": "b265de6c_29b2de95",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/provisiondevice/DeviceRendererServiceImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 133,
      "author": {
        "id": 8630
      },
      "writtenOn": "2020-04-20T12:05:43Z",
      "side": 1,
      "message": "why not directly\nString srcTp \u003d node.getSrcTp();\nString destTp \u003d node.getDestTp();",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 133,
        "endChar": 21
      },
      "revId": "05652f4f3231f98e3e5bde19e3fed1ab170bc96e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27638885_1ceb3257",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/provisiondevice/DeviceRendererServiceImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 133,
      "author": {
        "id": 6731
      },
      "writtenOn": "2020-04-21T06:37:01Z",
      "side": 1,
      "message": "Agreed. I missed that one. It looks like a regression that needs to be fixed.",
      "parentUuid": "b265de6c_29b2de95",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 133,
        "endChar": 21
      },
      "revId": "05652f4f3231f98e3e5bde19e3fed1ab170bc96e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "212997a9_f9d236f3",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/provisiondevice/DeviceRendererServiceImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 133,
      "author": {
        "id": 7446
      },
      "writtenOn": "2020-04-21T06:50:36Z",
      "side": 1,
      "message": "Sorry but I don\u0027t undestand your comment. If I added these tests, it is because the node.getSrcTp() and node.getDestTp() may be null depending on what the user is resquesting as service path...\nMoreover, when we request an ODU path creation, node.getSrcTp() MUST be null (cf the \"TransportPCE OTN implementation\" pptx support presented the 19 of March to the TransportPCE dev team).\nI suggest to keep them as they are.",
      "parentUuid": "27638885_1ceb3257",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 133,
        "endChar": 21
      },
      "revId": "05652f4f3231f98e3e5bde19e3fed1ab170bc96e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f8b159f_465cdf2e",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/provisiondevice/DeviceRendererServiceImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 133,
      "author": {
        "id": 6731
      },
      "writtenOn": "2020-04-21T06:58:13Z",
      "side": 1,
      "message": "At the execution, there is no difference between your code and the old one (except the time used to check the condition)\nWith String srcTp \u003d node.getSrcTp(); srcTp is null when node.getSrcTp() is null. So same result.\nYou are not exploiting the condition you have added on  node.getSrcTp() nullness, for example with an else and a warning / error etc...",
      "parentUuid": "212997a9_f9d236f3",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 133,
        "endChar": 21
      },
      "revId": "05652f4f3231f98e3e5bde19e3fed1ab170bc96e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00149c7a_611637cd",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/provisiondevice/DeviceRendererServiceImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 133,
      "author": {
        "id": 7446
      },
      "writtenOn": "2020-04-21T07:03:13Z",
      "side": 1,
      "message": "Yes indeed. I didn\u0027t see it. Thanks. I will correct it.",
      "parentUuid": "1f8b159f_465cdf2e",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 133,
        "endChar": 21
      },
      "revId": "05652f4f3231f98e3e5bde19e3fed1ab170bc96e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3a52f8f_1d308d26",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/provisiondevice/DeviceRendererServiceImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 133,
      "author": {
        "id": 7446
      },
      "writtenOn": "2020-04-21T13:44:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00149c7a_611637cd",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 133,
        "endChar": 21
      },
      "revId": "05652f4f3231f98e3e5bde19e3fed1ab170bc96e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aaf8426f_d8acea1d",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/provisiondevice/OtnDeviceRendererServiceImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 191,
      "author": {
        "id": 6731
      },
      "writtenOn": "2020-04-21T06:44:03Z",
      "side": 1,
      "message": "both treatments for 1G and 10G are very similar. A variable for ODU0 or ODU2E + a fallthrough would avoid duplicate code.",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 191,
        "endChar": 25
      },
      "revId": "05652f4f3231f98e3e5bde19e3fed1ab170bc96e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64d2535d_a88c86d7",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/provisiondevice/OtnDeviceRendererServiceImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 191,
      "author": {
        "id": 7446
      },
      "writtenOn": "2020-04-21T13:44:06Z",
      "side": 1,
      "message": "Maybe. Personally I don\u0027t see the trick to make it work...",
      "parentUuid": "aaf8426f_d8acea1d",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 191,
        "endChar": 25
      },
      "revId": "05652f4f3231f98e3e5bde19e3fed1ab170bc96e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58feff53_243e5ded",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/provisiondevice/OtnDeviceRendererServiceImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 191,
      "author": {
        "id": 6731
      },
      "writtenOn": "2020-04-21T18:33:50Z",
      "side": 1,
      "message": "You declared at the beginning the constant ODU2E\nprivate static final String ODU2E \u003d \"-ODU2e-\";\n\u003d\u003e replace it with a non-constant generic string.\n\nprivate String odu_service\u003d \"-ODU2e-\";\n\n[..]\n\nswitch (input.getServiceRate()) {\n\n[..]\n\n case (\"1G\"):\n    odu_service\u003d \"-ODU0-\";\n //fallthrough\n case (\"10G\"):\n                        if (node.getClientTp() !\u003d null) {\n                            connectionNumber \u003d node.getClientTp() + odu_service + input.getServiceName() + \"-x-\" + networkTp\n                                + odu_service + input.getServiceName();\n                        } else if (node.getNetwork2Tp() !\u003d null) {\n                            connectionNumber \u003d networkTp + odu_service + input.getServiceName() + \"-x-\" + node.getNetwork2Tp()\n                                + odu_service + input.getServiceName();\n                        } else {\n                            return;\n                        }\n                        break;",
      "parentUuid": "64d2535d_a88c86d7",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 191,
        "endChar": 25
      },
      "revId": "05652f4f3231f98e3e5bde19e3fed1ab170bc96e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8015e03c_bda625cb",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/provisiondevice/OtnDeviceRendererServiceImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 191,
      "author": {
        "id": 7446
      },
      "writtenOn": "2020-04-21T19:09:53Z",
      "side": 1,
      "message": "OK. Indeed it works, but not sure it improves the readability.",
      "parentUuid": "58feff53_243e5ded",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 191,
        "endChar": 25
      },
      "revId": "05652f4f3231f98e3e5bde19e3fed1ab170bc96e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb85fb56_241904a2",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/provisiondevice/OtnDeviceRendererServiceImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 191,
      "author": {
        "id": 8630
      },
      "writtenOn": "2020-04-21T20:42:23Z",
      "side": 1,
      "message": "This proposal is against sonar rule \"Switch cases should end with an unconditional \"break\" statement\" https://rules.sonarsource.com/java/RSPEC-128 \nThis rule is not activated in Sonar ODL profile but I agree with Gilles about readability.\nIf code for 10G and 1G are the same except for oduType, extract the code in a private method and pass oduType as argument.\nExample\n    private String getConnectionNumber(OtnServicePathInput input, Nodes node, String networkTp, String oduType) {\n        if (node.getClientTp() !\u003d null) {\n            return node.getClientTp() + oduType + input.getServiceName() + \"-x-\"\n                + networkTp + oduType + input.getServiceName();\n        } else if (node.getNetwork2Tp() !\u003d null) {\n            return networkTp + oduType + input.getServiceName() + \"-x-\"\n                + node.getNetwork2Tp() + oduType + input.getServiceName();\n        } else {\n            return null;\n        }\n        \n    }\n\nSo the switch/case becomes\n\n                    case (\"1G\"):\n                        connectionNumber \u003d getConnectionNumber(input, node, networkTp, \"-ODU0-\");\n                    break;\n                    case (\"10G\"):\n                    connectionNumber \u003d getConnectionNumber(input, node, networkTp, \"-ODU2e-\");\n                        break;\n\n And add null check on connectionNumber before calling List\u003cString\u003e intToDelete \u003d this.crossConnect.deleteCrossConnect(nodeId, connectionNumber, true);\n                if(connectionNumber \u003d\u003d null) {\n                    return;\n                }",
      "parentUuid": "8015e03c_bda625cb",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 191,
        "endChar": 25
      },
      "revId": "05652f4f3231f98e3e5bde19e3fed1ab170bc96e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af4f4763_5003c33b",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/provisiondevice/OtnDeviceRendererServiceImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 191,
      "author": {
        "id": 7446
      },
      "writtenOn": "2020-04-22T07:22:40Z",
      "side": 1,
      "message": "Thank you very much. This solution pleases me more, all the more it is the solution to which I was thinking about seeing the difficulty in circumventing the fallthrough sonar rules, and regarding the readability aspect, it seems to me much better. Adopted.",
      "parentUuid": "cb85fb56_241904a2",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 191,
        "endChar": 25
      },
      "revId": "05652f4f3231f98e3e5bde19e3fed1ab170bc96e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92c6817b_62ea78a4",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/provisiondevice/OtnDeviceRendererServiceImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 313,
      "author": {
        "id": 8630
      },
      "writtenOn": "2020-04-20T12:05:43Z",
      "side": 1,
      "message": "perhaps a constant ?",
      "range": {
        "startLine": 313,
        "startChar": 56,
        "endLine": 313,
        "endChar": 61
      },
      "revId": "05652f4f3231f98e3e5bde19e3fed1ab170bc96e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73f42989_a6c90de4",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/provisiondevice/OtnDeviceRendererServiceImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 313,
      "author": {
        "id": 7446
      },
      "writtenOn": "2020-04-21T13:44:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "92c6817b_62ea78a4",
      "range": {
        "startLine": 313,
        "startChar": 56,
        "endLine": 313,
        "endChar": 61
      },
      "revId": "05652f4f3231f98e3e5bde19e3fed1ab170bc96e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f61fedaa_35e3df99",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/provisiondevice/OtnDeviceRendererServiceImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 334,
      "author": {
        "id": 8630
      },
      "writtenOn": "2020-04-20T12:05:43Z",
      "side": 1,
      "message": "perhaps a constant ?",
      "range": {
        "startLine": 334,
        "startChar": 76,
        "endLine": 334,
        "endChar": 80
      },
      "revId": "05652f4f3231f98e3e5bde19e3fed1ab170bc96e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec6c4a89_b84beefd",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/provisiondevice/OtnDeviceRendererServiceImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 334,
      "author": {
        "id": 7446
      },
      "writtenOn": "2020-04-21T13:44:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f61fedaa_35e3df99",
      "range": {
        "startLine": 334,
        "startChar": 76,
        "endLine": 334,
        "endChar": 80
      },
      "revId": "05652f4f3231f98e3e5bde19e3fed1ab170bc96e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}