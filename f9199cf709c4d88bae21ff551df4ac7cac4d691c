{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8ca70762_7483f7c8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-06-30T14:51:38Z",
      "side": 1,
      "message": "LGTM",
      "revId": "f9199cf709c4d88bae21ff551df4ac7cac4d691c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dcdb2e23_0d4f2071",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-07-01T07:42:57Z",
      "side": 1,
      "message": " \u0027connection-map-lcp\u0027: \u0027XPDR3-CLIENT1\u0027 not present\n\nFAIL: test_05_get_portmapping_network1 (test03_renderer_or_modes.TransportPCE400GPortMappingTesting)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/guillaume/git_ws/transportpce/tests/transportpce_tests/7.1/test03_renderer_or_modes.py\", line 169, in test_05_get_portmapping_network1\n    self.assertIn(\nAssertionError: {\u0027logical-connection-point\u0027: \u0027XPDR3-NETWORK1\u0027, \u0027supporting-port\u0027: \u0027L1\u0027, \u0027supported-interface-capability\u0027: [\u0027org-openroadm-port-types:if-otsi-otsigroup\u0027], \u0027port-direction\u0027: \u0027bidirectional\u0027, \u0027port-qual\u0027: \u0027xpdr-network\u0027, \u0027supporting-circuit-pack-name\u0027: \u00271/1/4-PLUG-NET\u0027, \u0027xponder-type\u0027: \u0027tpdr\u0027, \u0027port-admin-state\u0027: \u0027InService\u0027, \u0027port-oper-state\u0027: \u0027InService\u0027, \u0027supporting-otucn\u0027: \u0027XPDR3-NETWORK1-OTUC1\u0027, \u0027lcp-hash-val\u0027: \u0027FDvaQIf2Z08\u003d\u0027} not found in [{\u0027logical-connection-point\u0027: \u0027XPDR3-NETWORK1\u0027, \u0027supporting-port\u0027: \u0027L1\u0027, \u0027lcp-hash-val\u0027: \u0027FDvaQIf2Z08\u003d\u0027, \u0027port-direction\u0027: \u0027bidirectional\u0027, \u0027xponder-type\u0027: \u0027tpdr\u0027, \u0027connection-map-lcp\u0027: \u0027XPDR3-CLIENT1\u0027, \u0027port-qual\u0027: \u0027xpdr-network\u0027, \u0027supporting-circuit-pack-name\u0027: \u00271/1/4-PLUG-NET\u0027, \u0027port-admin-state\u0027: \u0027InService\u0027, \u0027port-oper-state\u0027: \u0027InService\u0027, \u0027supporting-otucn\u0027: \u0027XPDR3-NETWORK1-OTUC1\u0027, \u0027supported-interface-capability\u0027: [\u0027org-openroadm-port-types:if-otsi-otsigroup\u0027]}]\n-------------------- \u003e\u003e begin captured stdout \u003c\u003c ---------------------\nexecution of test_05_get_portmapping_network1\n\n--------------------- \u003e\u003e end captured stdout \u003c\u003c ----------------------\n-------------------- \u003e\u003e begin captured logging \u003c\u003c --------------------\nurllib3.connectionpool: DEBUG: Starting new HTTP connection (1): localhost:8184\nurllib3.connectionpool: DEBUG: http://localhost:8184 \"GET /restconf/config/transportpce-portmapping:network/nodes/XPDR-A2/mapping/XPDR3-NETWORK1 HTTP/1.1\" 200 462\n--------------------- \u003e\u003e end captured logging \u003c\u003c ---------------------\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nFAIL: test_06_get_portmapping_network1 (test03_renderer_or_modes.TransportPCE400GPortMappingTesting)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/guillaume/git_ws/transportpce/tests/transportpce_tests/7.1/test03_renderer_or_modes.py\", line 178, in test_06_get_portmapping_network1\n    self.assertIn(\nAssertionError: {\u0027logical-connection-point\u0027: \u0027XPDR3-NETWORK1\u0027, \u0027supporting-port\u0027: \u0027L1\u0027, \u0027supported-interface-capability\u0027: [\u0027org-openroadm-port-types:if-otsi-otsigroup\u0027], \u0027port-direction\u0027: \u0027bidirectional\u0027, \u0027port-qual\u0027: \u0027xpdr-network\u0027, \u0027supporting-circuit-pack-name\u0027: \u00271/1/4-PLUG-NET\u0027, \u0027xponder-type\u0027: \u0027tpdr\u0027, \u0027port-admin-state\u0027: \u0027InService\u0027, \u0027port-oper-state\u0027: \u0027InService\u0027, \u0027supporting-otucn\u0027: \u0027XPDR3-NETWORK1-OTUC1\u0027, \u0027lcp-hash-val\u0027: \u0027AJpkaVmZKJk5\u0027} not found in [{\u0027logical-connection-point\u0027: \u0027XPDR3-NETWORK1\u0027, \u0027supporting-port\u0027: \u0027L1\u0027, \u0027lcp-hash-val\u0027: \u0027AJpkaVmZKJk5\u0027, \u0027port-direction\u0027: \u0027bidirectional\u0027, \u0027xponder-type\u0027: \u0027tpdr\u0027, \u0027connection-map-lcp\u0027: \u0027XPDR3-CLIENT1\u0027, \u0027port-qual\u0027: \u0027xpdr-network\u0027, \u0027supporting-circuit-pack-name\u0027: \u00271/1/4-PLUG-NET\u0027, \u0027port-admin-state\u0027: \u0027InService\u0027, \u0027port-oper-state\u0027: \u0027InService\u0027, \u0027supporting-otucn\u0027: \u0027XPDR3-NETWORK1-OTUC1\u0027, \u0027supported-interface-capability\u0027: [\u0027org-openroadm-port-types:if-otsi-otsigroup\u0027]}]\n-------------------- \u003e\u003e begin captured stdout \u003c\u003c ---------------------\nexecution of test_06_get_portmapping_network1\n\n--------------------- \u003e\u003e end captured stdout \u003c\u003c ----------------------\n-------------------- \u003e\u003e begin captured logging \u003c\u003c --------------------\nurllib3.connectionpool: DEBUG: Starting new HTTP connection (1): localhost:8184\nurllib3.connectionpool: DEBUG: http://localhost:8184 \"GET /restconf/config/transportpce-portmapping:network/nodes/XPDR-C2/mapping/XPDR3-NETWORK1 HTTP/1.1\" 200 462\n--------------------- \u003e\u003e end captured logging \u003c\u003c ---------------------\n\n----------------------------------------------------------------------\nRan 48 tests in 546.044s\n\nFAILED (failures\u003d2)\n",
      "revId": "f9199cf709c4d88bae21ff551df4ac7cac4d691c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e8cae32_6a663b85",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/networkanalyzer/PceOpticalNode.java",
        "patchSetId": 1
      },
      "lineNbr": 357,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-06-30T14:51:38Z",
      "side": 1,
      "message": "since we are doing some refactoring here, I think a guard clause would make more sense\n\n\n\n        if (this.availableSrgPp.isEmpty()) {\n            LOG.error(\"getRdmSrgClient: SRG TerminationPoint PP list is not available for node {}\", this);\n            return null;\n        }\n        final OpenroadmTpType openType \u003d srgType;\n        Optional\u003cString\u003e client \u003d this.availableSrgPp.entrySet()\n                .stream().filter(pp -\u003e pp.getValue().getName().equals(openType.getName()))\n                .map(Map.Entry::getKey).min(new SortPortsByName());\n        if (client.isEmpty()) {\n            LOG.error(\"getRdmSrgClient: ROADM {} doesn\u0027t have PP Client for CP {}\", this, tp);\n            return null;\n        }\n        LOG.debug(\"getRdmSrgClient: client PP {} for CP {} found !\", client, tp);\n        return client.get();",
      "revId": "f9199cf709c4d88bae21ff551df4ac7cac4d691c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b08fb4b_d694c759",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/networkanalyzer/PceOpticalNode.java",
        "patchSetId": 1
      },
      "lineNbr": 357,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-07-01T08:04:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7e8cae32_6a663b85",
      "revId": "f9199cf709c4d88bae21ff551df4ac7cac4d691c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}