{
  "pushCert": "certificate version 0.1\npusher 5FBDF9B9314FAD71 1751634447 +0200\npushee ssh://git.opendaylight.org:29418/transportpce\nnonce 1751634447-436AB2382A79D2F56B8C3B59EE5D9EDF99028FF1\n\n0000000000000000000000000000000000000000 71aabd8bad9d98ecd9c4fcb20fa3e5c5d26e3e99 refs/for/master\n-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEIKU9c2lqXpTzMWXlX735uTFPrXEFAmhn0g8ACgkQX735uTFP\nrXHK+hAAjoohDmCufpu51opWp2fF/6wnHP5KSI8Zny8fdMNhlLS4wAeDYud3UK+S\nAjU82K45MR+Ty5jPsaBqoC0AuAAEO4tiK3kFPha+CXMb58l9ynFabihd246kTtIn\naPeSLqQT+bwRaV618f0MCuUNx3lV3PEgDQM9xXDCOr0oX738nilVVntlILHxglfX\nDKZVhXUpWoca8p5Bpngm2BcysM00uqNL+xSLVooxgTT9YQmajTTN53VXLi3JAgPX\njUwGdQXoTbJCxx84+xkofpT6PR5C3sJa/9Uc6HR8W/I9TG0nY1KVIVxR5k+oAFCk\nbZSid9oUoocxXG1tFo1jim3/slrBSE6gD7d6qGmRfPDT6PUArC+maykOdVWISMjL\n52RT4ZgD/Q7hdRyEYWZJdPYs4gB4vqhvFnS18WOU6Sj4cInLBWIAL8ZolCIB7J0N\n17/MRGAbpTwITNpR66COo+taxnW2yeaSL/5C6h1LMcYGlm4UZ9Sd7mkJrObKDO4m\naYWx/rfrJvDXzT6LhUFvVWgKY93dWGVySMHk3EKx8vmyGpI0ZkUiKgBP5nX3nGYC\n/VJuu5VpbL0cU5mROC8JbAaTrg2CqeHXKGotAuQG43QHakRCiO8GPaoewcktpoAm\n54inhr2HBQZChduw+yV8cZ5obXnZQJnaoLmx0nICSMW0HJ9hDss\u003d\n\u003d4Pf5\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8e890c52_6f129cca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 25
      },
      "lineNbr": 0,
      "author": {
        "id": 7217
      },
      "writtenOn": "2025-07-07T16:35:24Z",
      "side": 1,
      "message": "Hi Joakim,\nAgree with Jonas comment. Add another comment (I am not really used to this part of the tpce code...).\nThanks",
      "revId": "e64c145a3c3aa83869905eed28e5b3f46019dfb2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42906860_6e8e3273",
        "filename": "tapi/src/main/java/org/opendaylight/transportpce/tapi/utils/TapiInitialORMapping.java",
        "patchSetId": 25
      },
      "lineNbr": 81,
      "author": {
        "id": 7217
      },
      "writtenOn": "2025-07-07T16:35:24Z",
      "side": 1,
      "message": "I am not really familiar with this part of the code and have a question. \n\nCopying Gilles has he knows better that I do the Renderer and the SH : @gilles.thouenon@orange.com\n\nPerformServInitialMapping was initially used to translate and copy services of the OR dataStore into the TAPI connectivity-service Datastore at initialization of the tapi feature. If I understand correctly, here you complement the implementation so that we can handle all services of the OR Service datastore, or a service-list, or a service. Great!\n\nNow if we consider that a user can create a service using TAPI API (create-connectivity-service) that is translated to the relevant equivalent OR rpc by tpce, the expected behavior of your new code is that at reception of a ServiceRpcResultSh notification, the service will be copied in the TAPI DataStore (TapiServiceNotificationHandler) through copyServiceToTapi which itself calls this method. Are you sure that at this stage (multiThread?...), the new service has been copied to the OR service DataStore and that it should be found there ?\nOrtherwise, if I\u0027m not confused it will not be copied through updateConnectivityContext",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 81,
        "endChar": 9
      },
      "revId": "e64c145a3c3aa83869905eed28e5b3f46019dfb2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0c09afd_65a2149c",
        "filename": "tapi/src/main/java/org/opendaylight/transportpce/tapi/utils/TapiInitialORMapping.java",
        "patchSetId": 25
      },
      "lineNbr": 81,
      "author": {
        "id": 8358
      },
      "writtenOn": "2025-09-11T18:52:14Z",
      "side": 1,
      "message": "What do you mean be \"the new service has been copied to the OR service DataStore and that it should be found there\"? As you say above, even if a user creates a service using TAPI create-connectivity-service, this is translated to OR service-create RPC, so what is the difference compared to creating it using OR API directly?",
      "parentUuid": "42906860_6e8e3273",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 81,
        "endChar": 9
      },
      "revId": "e64c145a3c3aa83869905eed28e5b3f46019dfb2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "795193f6_32f8079d",
        "filename": "tapi/src/main/java/org/opendaylight/transportpce/tapi/utils/TapiInitialORMapping.java",
        "patchSetId": 25
      },
      "lineNbr": 81,
      "author": {
        "id": 9231
      },
      "writtenOn": "2025-09-15T07:26:17Z",
      "side": 1,
      "message": "\u003e Are you sure that at this stage (multiThread?...), the new service has been copied to the OR service DataStore and that it should be found there ?\n\nGood question. I believe it should be there. Here is how it works:\n\n### 1. RendererNotificationHandler\n\n```java\n...\nprivate void onSuccededServiceImplementation(RendererRpcResultSp notification) {\n\nLOG.info(\"Service implemented !\");\nOperationResult operationResult \u003d this.serviceDataStoreOperations.modifyService(\n    serviceRpcResultSp.getServiceName(),\n    State.InService,\n    AdminStates.InService\n);\nsendServiceHandlerNotification(\n    notification,\n    ServiceNotificationTypes.ServiceCreateResult\n);\n...\n```\n\n- The call `modifyService()` reads the service, modifies it and executes a write commit to the datastore.\n- The call sendServiceHandlerNotification(...) triggers a `ServiceRpcResultSh` notification being sent.\n\n### 2. TapiServiceNotificationHandler\n\nThis class is listening for `ServiceRpcResultSh.class` events and it triggers a openroadm service copy to TAPI. I\u0027ve intentionally edited the example to get to the core:\n\n```java\nprivate void onServiceRpcResultSh(ServiceRpcResultSh notification) {\n    openRoadmService.copyServiceToTAPI(notification.getServiceName());\n}\n```\n\nI don\u0027t think multi thread is an issue in this case. Reading the log, I see the line \"Service implemented !\" only once. However, there is an issue regarding topology, since it is updated separately. Topology is addressed in a separate commit.",
      "parentUuid": "e0c09afd_65a2149c",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 81,
        "endChar": 9
      },
      "revId": "e64c145a3c3aa83869905eed28e5b3f46019dfb2",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}