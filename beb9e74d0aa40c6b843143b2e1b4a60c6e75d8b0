{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2f0658e0_3e3dbe5c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-08-27T13:59:27Z",
      "side": 1,
      "message": " python3 -m pytest -q transportpce_tests/2.2.1/test06_renderer_service_path_nominal.py\n15:30:09 .....FFF.......................                                          [100%]\n15:31:02 \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FAILURES \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n15:31:11 ______ TransportPCERendererTesting.test_06_service_path_create_rdm_check _______\n15:31:11 \n15:31:11 self \u003d \u003ctest06_renderer_service_path_nominal.TransportPCERendererTesting testMethod\u003dtest_06_service_path_create_rdm_check\u003e\n15:31:11 \n15:31:11     def test_06_service_path_create_rdm_check(self):\n15:31:11         response \u003d test_utils_rfc8040.check_node_attribute_request(\"ROADM-A1\", \"interface\", \"DEG1-TTP-TXRX-nmc-713:720\")\n15:31:11         self.assertEqual(response[\u0027status_code\u0027], requests.codes.ok)\n15:31:11         # the following statement replaces self.assertDictContainsSubset deprecated in python 3.2\n15:31:11         self.assertDictEqual(\n15:31:11             dict({\n15:31:11                  \u0027name\u0027: \u0027DEG1-TTP-TXRX-nmc-713:720\u0027,\n15:31:11                  \u0027administrative-state\u0027: \u0027inService\u0027,\n15:31:11                  \u0027supporting-circuit-pack-name\u0027: \u00271/0\u0027,\n15:31:11                  \u0027type\u0027: \u0027org-openroadm-interfaces:networkMediaChannelConnectionTerminationPoint\u0027,\n15:31:11                  \u0027supporting-port\u0027: \u0027L1\u0027\n15:31:11                  }, **response[\u0027interface\u0027][0]), response[\u0027interface\u0027][0]\n15:31:11         )\n15:31:11         self.assertIn(response[\u0027interface\u0027][0][\u0027org-openroadm-network-media-channel-interfaces:nmc-ctp\u0027],\n15:31:11                       [{\u0027frequency\u0027: \u0027195.8000\u0027, \u0027width\u0027: \u002740\u0027},\n15:31:11 \u003e                      {\u0027frequency\u0027: 195.8, \u0027width\u0027: 40}])\n15:31:11 E       AssertionError: {\u0027frequency\u0027: \u0027195.80000000\u0027, \u0027width\u0027: \u002740.0\u0027} not found in [{\u0027frequency\u0027: \u0027195.8000\u0027, \u0027width\u0027: \u002740\u0027}, {\u0027frequency\u0027: 195.8, \u0027width\u0027: 40}]\n15:31:11 \n15:31:11 transportpce_tests/2.2.1/test06_renderer_service_path_nominal.py:121: AssertionError\n15:31:11 ______ TransportPCERendererTesting.test_07_service_path_create_rdm_check _______\n15:31:11 \n15:31:11 self \u003d \u003ctest06_renderer_service_path_nominal.TransportPCERendererTesting testMethod\u003dtest_07_service_path_create_rdm_check\u003e\n15:31:11 \n15:31:11     def test_07_service_path_create_rdm_check(self):\n15:31:11         response \u003d test_utils_rfc8040.check_node_attribute_request(\"ROADM-A1\", \"interface\", \"DEG1-TTP-TXRX-mc-713:720\")\n15:31:11         self.assertEqual(response[\u0027status_code\u0027], requests.codes.ok)\n15:31:11         # the following statement replaces self.assertDictContainsSubset deprecated in python 3.2\n15:31:11         self.assertDictEqual(\n15:31:11             dict({\n15:31:11                  \u0027name\u0027: \u0027DEG1-TTP-TXRX-mc-7\u0027,\n15:31:11                  \u0027administrative-state\u0027: \u0027inService\u0027,\n15:31:11                  \u0027supporting-circuit-pack-name\u0027: \u00271/0\u0027,\n15:31:11                  \u0027type\u0027: \u0027org-openroadm-interfaces:mediaChannelTrailTerminationPoint\u0027,\n15:31:11                  \u0027supporting-port\u0027: \u0027L1\u0027\n15:31:11                  }, **response[\u0027interface\u0027][0]), response[\u0027interface\u0027][0]\n15:31:11         )\n15:31:11         self.assertIn(response[\u0027interface\u0027][0][\u0027org-openroadm-media-channel-interfaces:mc-ttp\u0027],\n15:31:11                       [{\u0027min-freq\u0027: \u0027195.7750\u0027, \u0027max-freq\u0027: \u0027195.8250\u0027},\n15:31:11 \u003e                      {\u0027min-freq\u0027: 195.775, \u0027max-freq\u0027: 195.825}])\n15:31:11 E       AssertionError: {\u0027max-freq\u0027: \u0027195.82500000\u0027, \u0027min-freq\u0027: \u0027195.77500000\u0027} not found in [{\u0027min-freq\u0027: \u0027195.7750\u0027, \u0027max-freq\u0027: \u0027195.8250\u0027}, {\u0027min-freq\u0027: 195.775, \u0027max-freq\u0027: 195.825}]\n15:31:11 \n15:31:11 transportpce_tests/2.2.1/test06_renderer_service_path_nominal.py:138: AssertionError\n15:31:11 ______ TransportPCERendererTesting.test_08_service_path_create_rdm_check _______\n15:31:11 \n15:31:11 self \u003d \u003ctest06_renderer_service_path_nominal.TransportPCERendererTesting testMethod\u003dtest_08_service_path_create_rdm_check\u003e\n15:31:11 \n15:31:11     def test_08_service_path_create_rdm_check(self):\n15:31:11         response \u003d test_utils_rfc8040.check_node_attribute_request(\"ROADM-A1\", \"interface\", \"SRG1-PP3-TXRX-nmc-713:720\")\n15:31:11         self.assertEqual(response[\u0027status_code\u0027], requests.codes.ok)\n15:31:11         # the following statement replaces self.assertDictContainsSubset deprecated in python 3.2\n15:31:11         self.assertDictEqual(\n15:31:11             dict({\n15:31:11                  \u0027name\u0027: \u0027SRG1-PP3-TXRX-nmc-713:720\u0027,\n15:31:11                  \u0027administrative-state\u0027: \u0027inService\u0027,\n15:31:11                  \u0027supporting-circuit-pack-name\u0027: \u00273/0\u0027,\n15:31:11                  \u0027type\u0027: \u0027org-openroadm-interfaces:networkMediaChannelConnectionTerminationPoint\u0027,\n15:31:11                  \u0027supporting-port\u0027: \u0027C3\u0027\n15:31:11                  }, **response[\u0027interface\u0027][0]), response[\u0027interface\u0027][0]\n15:31:11         )\n15:31:11         self.assertIn(response[\u0027interface\u0027][0][\u0027org-openroadm-network-media-channel-interfaces:nmc-ctp\u0027],\n15:31:11                       [{\u0027frequency\u0027: \u0027195.8000\u0027, \u0027width\u0027: \u002740\u0027},\n15:31:11 \u003e                      {\u0027frequency\u0027: 195.8, \u0027width\u0027: 40}])\n15:31:11 E       AssertionError: {\u0027frequency\u0027: \u0027195.80000000\u0027, \u0027width\u0027: \u002740.0\u0027} not found in [{\u0027frequency\u0027: \u0027195.8000\u0027, \u0027width\u0027: \u002740\u0027}, {\u0027frequency\u0027: 195.8, \u0027width\u0027: 40}]\n15:31:11 \n15:31:11 transportpce_tests/2.2.1/test06_renderer_service_path_nominal.py:155: AssertionError\n15:31:11 \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d short test summary info \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n15:31:11 FAILED transportpce_tests/2.2.1/test06_renderer_service_path_nominal.py::TransportPCERendererTesting::test_06_service_path_create_rdm_check\n15:31:11 FAILED transportpce_tests/2.2.1/test06_renderer_service_path_nominal.py::TransportPCERendererTesting::test_07_service_path_create_rdm_check\n15:31:11 FAILED transportpce_tests/2.2.1/test06_renderer_service_path_nominal.py::TransportPCERendererTesting::test_08_service_path_create_rdm_check\n15:31:11 3 failed, 28 passed in 60.94s (0:01:00)\n15:31:11 ERROR: InvocationError for command /w/workspace/transportpce-tox-verify-chlorine/tests/launch_tests.sh 2.2.1 (exited with code 1)\n15:31:11 ERROR: invocation failed (exit code 1)\n15:31:11 âœ– FAIL tests221 in 17 minutes, 18.657 seconds",
      "revId": "beb9e74d0aa40c6b843143b2e1b4a60c6e75d8b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}