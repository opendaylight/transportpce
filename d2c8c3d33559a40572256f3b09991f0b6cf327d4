{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2ac9c02e_3818426b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9231
      },
      "writtenOn": "2024-10-15T05:12:03Z",
      "side": 1,
      "message": "recheck",
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e627ecb7_f0e38b9e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-18T16:25:55Z",
      "side": 1,
      "message": "Thanks so much Joakim for this huge and valuable contribution. \nHope my comments will be understandable since I went back and forth between the different classes many times, as I understood some things only going through the latest tests. So it could be that some of them not fully make sense, reflecting part of y confusion. We can discuss it during next meeting.\nIt\u0027s great and brings a feature of interest for several companies that asked for modifying OR models (service API) to have it. I have only 1 or 2 concerns with the name you choose for some of the parameters :\nThe leaf slot-width, and the way you use width and slot in the name of your variables. In openRoadm when we use \"width\" aside a \"frequency\", it always mean total width, and shall not be multiplied by anything. If I remember well this was one reason for being sometime confused.\nThanks again, and do not spend too much time of comments that do not seem so clear to you : again, we can discuss it in a meeting.",
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53f16ec4_b83e182e",
        "filename": "api/src/main/yang/com-smartoptics-openroadm-service@2023-09-07.yang",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-18T16:25:55Z",
      "side": 1,
      "message": "The leaf name is really confusing to me. It took me a lot of time understanding how you use it, and I did not understand part of your code because of this.\nWould be interested in knowing what Jonas thinks about it.\nElementary slot with is 6.25. \nFrequency spacing granularity is 12.5. For slot width I would expect something in GHz.I would expect something like number-of-12-5-slots (not that nice) or number-of-freq-spacing-slots (probably too long and even worst...)",
      "range": {
        "startLine": 79,
        "startChar": 11,
        "endLine": 79,
        "endChar": 21
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a5ada04_16649e1e",
        "filename": "api/src/main/yang/com-smartoptics-openroadm-service@2023-09-07.yang",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 8358
      },
      "writtenOn": "2024-10-21T08:29:02Z",
      "side": 1,
      "message": "We did have some discussion about whether to specify slot-width in GHz or in number of 12.5 GHz slots. The flexgrid definition in ITU-T G.694.1 says:\n\n\"slot width defined by: 12.5 Ã— m where m is a positive integer and 12.5 is the slot width granularity in GHz.\"\n\nIn the yang file, slot-width refers to the \"m\" value in ITU-T\u0027s definition. In principle, I would be fine with using GHz instead but the disadvantage is that then we need to decide how to handle the case when the requested slot-width divided by the granularity (12.5) is not an integer.",
      "parentUuid": "53f16ec4_b83e182e",
      "range": {
        "startLine": 79,
        "startChar": 11,
        "endLine": 79,
        "endChar": 21
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd10fdd1_76642b18",
        "filename": "api/src/main/yang/com-smartoptics-openroadm-service@2023-09-07.yang",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 9231
      },
      "writtenOn": "2024-10-21T13:04:26Z",
      "side": 1,
      "message": "I found this in `org-openroadm-media-channel-interfaces.yang`. So the confusion stems from our model defining the same name as numeric nr of slots as opposed to frequency in GHZ.\n\n```\n    leaf slot-width {\n      type org-openroadm-common-optical-channel-types:frequency-GHz;\n      config false;\n      description\n        \"Width of the slot.  Granularity is hardware dependent, based on slot-width-granularity\";\n    }\n```\n\nWhat about... \n* `flex-grid-slots`\n* `number-of-flex-grid-slots`\n* `g-694-1-slots`\n* `number-of-g-694-1-slots`\n* `frequency-slots`\n* `number-of-frequency-slots`\n* `m`",
      "parentUuid": "2a5ada04_16649e1e",
      "range": {
        "startLine": 79,
        "startChar": 11,
        "endLine": 79,
        "endChar": 21
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "beb35466_58a67130",
        "filename": "api/src/main/yang/com-smartoptics-openroadm-service@2023-09-07.yang",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 8358
      },
      "writtenOn": "2024-10-21T16:35:34Z",
      "side": 1,
      "message": "But the thing we define is the same thing as defined in org-openroadm-media-channel-interfaces.yang, just using a different unit. Personally, I think it will be more confusing to use an alternative name since slot width is the established ITU-T terminology. Note that in standard flexgrid terminology, it does not make sense to talk about things like number-of-flex-grid-slots or number-of-g-694-1-slots.\n\nIf we have to change it, I would rather keep the name and change the unit to GHz.",
      "parentUuid": "fd10fdd1_76642b18",
      "range": {
        "startLine": 79,
        "startChar": 11,
        "endLine": 79,
        "endChar": 21
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f6a4cea_aa19d373",
        "filename": "api/src/main/yang/com-smartoptics-openroadm-service@2023-09-07.yang",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 9231
      },
      "writtenOn": "2024-10-22T08:56:15Z",
      "side": 1,
      "message": "I see your point. Personally, I don\u0027t have a strong opinion either way regarding changing the name or keeping it. Also, defining slot-width as a frequency range in GHz or keeping it as is doesn\u0027t matter as far as I\u0027m concerned. Changing it to frequency range requires some more work though, but not too much.\n\nIn the meantime, I felt the descriptions in this yang-model could use an update so I pushed a tiny update.",
      "parentUuid": "beb35466_58a67130",
      "range": {
        "startLine": 79,
        "startChar": 11,
        "endLine": 79,
        "endChar": 21
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5da11879_a4d00bf0",
        "filename": "api/src/main/yang/com-smartoptics-openroadm-service@2023-09-07.yang",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-23T12:26:56Z",
      "side": 1,
      "message": "I have no concerns with the different options options you propose. My feeling is that changing slot-width to GHz might take more time to you and could have some side effects. And if you go for this option, imho width would make more sense and would be in line with what we have in OpenROADM (center-frequency, associated width, which is the total width and shall be m x 12.5 GHz).\nThe description in the yang file is clear. My point was more about the fact that, reading the code, it is confusing until we go back to the yang file to read the description.\nI also understand Jonas point. The fact is that we have to deal with both ITU-T and OpenROADM. Imho, if we find a name that clearly describe the parameter, it will make it clear in the code and clarify potential misunderstandings. Then my preference would be number-of-frequency-slots (frequency-slot let think that we are not talking of unitary slot of 6.25, but that we align on a frequency grid, minimum spacing being 12.5 GHz). Could be freq-slot-multiplier, freq-slot-m. Do not hesitate to make other suggestions if you feel this is still not satisfactory considering ITU-T definitions.",
      "parentUuid": "5f6a4cea_aa19d373",
      "range": {
        "startLine": 79,
        "startChar": 11,
        "endLine": 79,
        "endChar": 21
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77df6990_76cca149",
        "filename": "api/src/main/yang/com-smartoptics-openroadm-service@2023-09-07.yang",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 9231
      },
      "writtenOn": "2024-10-25T06:29:35Z",
      "side": 1,
      "message": "I changed the datatype from uint32 to frequency-GHz. Wasn\u0027t too much work. Most of the work involved changing commit messages.\n\nApart from unit tests, I only had to update this method in `ServiceFrequency`:\n\n`public int slotWidth(FrequencySlot frequencySlot, Double frequencyGranularity)`\n\nThe method was used to \"translate\" the numeric slot with received from the client to the slot width used internally (i.e. 2 x input slot width). Now the method translates a frequency to a numeric value. The rest of the code should be able to work as before.",
      "parentUuid": "5da11879_a4d00bf0",
      "range": {
        "startLine": 79,
        "startChar": 11,
        "endLine": 79,
        "endChar": 21
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "441de7e4_1bcf5140",
        "filename": "api/src/main/yang/com-smartoptics-openroadm-service@2023-09-07.yang",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-25T12:54:36Z",
      "side": 1,
      "message": "Ok, looks good but need to investigate your other changes. Not that easy to see all impacts as the change has been split into several others.. Will continue the review.",
      "parentUuid": "77df6990_76cca149",
      "range": {
        "startLine": 79,
        "startChar": 11,
        "endLine": 79,
        "endChar": 21
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7640281_e5d4bcf7",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/frequency/interval/FrequencyIntervalFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-18T16:25:55Z",
      "side": 1,
      "message": "Not so clear to me : in the interface you mention slot : number of slot in the interval. Can you elaborate? I\u0027m fine with the following calculation assuming that slots \u003d 1. But intuitively I would expect that slots corresponds to the number of elementary slots which is I guess not the case. I think I miss something here. Why would we need to define an interval centered on center frequency with x times the width/2 around. I don\u0027t see the use case...",
      "range": {
        "startLine": 61,
        "startChar": 85,
        "endLine": 61,
        "endChar": 90
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "221dc9c1_ec45953c",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/frequency/interval/FrequencyIntervalFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 9231
      },
      "writtenOn": "2024-10-21T11:59:56Z",
      "side": 1,
      "message": "Looking at this method now, I\u0027d say it\u0027s probably missing some clarification. The intention was to create a method with this calculation:\n\n`centerFrequencyTHz Â± ((slots / 2) x widthGHz)`.\n\nConsider these examples where C is the center frequency. This method will return an interval consisting of frequencies F1 and F2:\n\n```\n(A)\n |-----1-----|.  12.5GHz  slots\n |--1--|--2--|.   6.25GHz slots\n |-----C-----|\nF1-----------F2\n\nThe interval can be found using: interval(C, 6.25, 2);\n\n\n(B)\n |-----1-----|-----2-----|.  12.5GHz. slots\n |--1--|--2--|--3--|--4--|.   6.25GHz slots\n |-----------C-----------|\nF1-----------------------F2\n\nThe interval can be found using: interval(C, 6.25, 4);\n```\n\nPerhaps `widthGHz` should be renamed to `frequencyGranularityGHz`, or `slotFrequencyGHz`.\n\nJonas suggested renaming `slots`. I\u0027m struggling with coming up with a suitable alternative though.\n* `totalSlots`?\n* `totalSlotWidthCount`?\n* `nrOfFrequencyGranularitySlots`?\n* `frequencyGranularityWidthQuotient`?\n\nOn a side note, this method should probably throw an exception if slots are not evenly dividable by 2.\n\nThe use case is we\u0027re using 12.5GHz slots in the API input, and 6.25GHz slots in TPCE. So this method is used when API input is being processed.",
      "parentUuid": "b7640281_e5d4bcf7",
      "range": {
        "startLine": 61,
        "startChar": 85,
        "endLine": 61,
        "endChar": 90
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7de44a0a_9c20e92f",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/frequency/interval/FrequencyIntervalFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-23T12:26:56Z",
      "side": 1,
      "message": "In openROADM we use, to define a nmc,  a centerfrequency in THz and a width in GHz which correspond to the the total width. This is where the confusion comes from (at least in my mind). Since (as I understand it from your explanation) the current widthGHz variable can host either frequencyGranularityGHz (12.5), or unitarySlotGHz (6.25), I would suggest something like interval(centerFrequencyTHz, slotWidthGHz, slotNumber) , which makes it consistent.",
      "parentUuid": "221dc9c1_ec45953c",
      "range": {
        "startLine": 61,
        "startChar": 85,
        "endLine": 61,
        "endChar": 90
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "676f8fd4_9f241b47",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/frequency/interval/FrequencyIntervalFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-18T16:25:55Z",
      "side": 1,
      "message": "Seems that at the end  intervalCollection is a union of frequencyIntervals defined in A and Z end of the PathComputationRequestInput, which I guess is directly derived from A and Z end container of the service create. What if by mistake a user enters in A end and Z end different frequencyIntervals? Should it not be the intersection rather the union? Did I miss something?",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 86,
        "endChar": 111
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7307cde4_3348ef55",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/frequency/interval/FrequencyIntervalFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 9231
      },
      "writtenOn": "2024-10-21T11:59:56Z",
      "side": 1,
      "message": "frequency-slot\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nYes, it appears to be a union in this case and I agree with you, that\u0027s wrong. My original intention was to throw an exception if this case happened. It appears this is no longer the case. Perhaps a refactor gone wrong, I\u0027ll have to check. \n\nImho, a \"hard fail\" would be better, i.e. the client has specified something that doesn\u0027t make any sense.\n\nfrequency-range\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nIn this case my intention was to use the union. I\u0027ve discussed this with Jonas and he feels the intersection would be better. I don\u0027t have a strong preference either way.\n\nSuggestion\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nI suggest the two cases are changed as follows.\n\n1 - frequency-range\n--------------------------------------\nUse the intersection. e.g. 193.0 - 194.0 in this example:\n```\n{\n    \"input\": {\n        ...\n        \"service-a-end\": {\n            ...\n            \"frequency-range\": {\n                \"min-frequency\": 192.0,\n                \"max-frequency\": 194.0\n            },\n            ...\n        },\n        \"service-z-end\": {\n            ...\n            \"frequency-range\": {\n                \"min-frequency\": 193.0,\n                \"max-frequency\": 195.0\n            },\n            ...\n        }\n    }\n}\n```\n\n2 - frequency-slot\n------------------\nRequire AEnd \u003d ZEnd. e.g. this example would result in a hard fail regardless if some of the frequency ranges overlap or not:\n\n```\n{\n    \"input\": {\n        ...\n        \"service-a-end\": {\n            ...\n            \"frequency-slot\": {\n                \"center-frequency\": 193.1,\n                \"slot-width\": X\n            },\n            ...\n        },\n        \"service-z-end\": {\n            ...\n            \"frequency-slot\": {\n                \"center-frequency\": 193.5,\n                \"slot-width\": X\n            },\n            ...\n        }\n    }\n}\n```",
      "parentUuid": "676f8fd4_9f241b47",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 86,
        "endChar": 111
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69a3a4d0_03bfa919",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/frequency/interval/FrequencyIntervalFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-23T12:26:56Z",
      "side": 1,
      "message": "I Agree with your approach for both frequency range \u0026 frequency slot,  : intersection, exception if not consistent.",
      "parentUuid": "7307cde4_3348ef55",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 86,
        "endChar": 111
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68f00c85_7a82297f",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/frequency/interval/FrequencyIntervalFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-18T16:25:55Z",
      "side": 1,
      "message": "Same as first comment. I don\u0027t see the use case for slots*width. Probably need to refine the description of slot in the interface",
      "range": {
        "startLine": 101,
        "startChar": 42,
        "endLine": 101,
        "endChar": 67
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fed9add5_355220ca",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/frequency/interval/FrequencyIntervalFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 9231
      },
      "writtenOn": "2024-10-21T11:59:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "68f00c85_7a82297f",
      "range": {
        "startLine": 101,
        "startChar": 42,
        "endLine": 101,
        "endChar": 67
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d20ca9a_669c2fe2",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/frequency/service/ServiceFrequency.java",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-18T16:25:55Z",
      "side": 1,
      "message": "12.5 or frequencyGranularity?",
      "range": {
        "startLine": 79,
        "startChar": 45,
        "endLine": 79,
        "endChar": 49
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65a1b94b_f6a2810b",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/frequency/service/ServiceFrequency.java",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 9231
      },
      "writtenOn": "2024-10-21T11:59:56Z",
      "side": 1,
      "message": "This is actually intentional. A conversion between the input slot width and the width we use internally. Either we hardcode `12.5` or `2`. `12.5` is perhaps less wrong.",
      "parentUuid": "9d20ca9a_669c2fe2",
      "range": {
        "startLine": 79,
        "startChar": 45,
        "endLine": 79,
        "endChar": 49
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d35cfb9c_4da1f7d4",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/frequency/service/ServiceFrequency.java",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-23T12:26:56Z",
      "side": 1,
      "message": "Sorry, did not understood correctly remainder operator. Got it!",
      "parentUuid": "65a1b94b_f6a2810b",
      "range": {
        "startLine": 79,
        "startChar": 45,
        "endLine": 79,
        "endChar": 49
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f29c864f_2734bc1f",
        "filename": "pce/src/test/java/org/opendaylight/transportpce/pce/frequency/FrequencyIntervalFactoryTest.java",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-18T16:25:55Z",
      "side": 1,
      "message": "Is there any specific reason why you specify  a frequency slot that is out of the frequency range ? Want to show this is checked somewhere else ? \nThis brings another question. \nWould it make sense to check consistency while service-create request is exercised rather than later on in PostAlgoValidator when the path computation request has been launched?",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 54,
        "endChar": 25
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "644891c4_518c1756",
        "filename": "pce/src/test/java/org/opendaylight/transportpce/pce/frequency/FrequencyIntervalFactoryTest.java",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 9231
      },
      "writtenOn": "2024-10-21T11:59:56Z",
      "side": 1,
      "message": "Mostly a way to verify they work independently. I guess this comes down to \"responsibility\". I didn\u0027t make this factory responsible for validating user input. Maybe it should be or maybe it should happen somewhere else. I\u0027m not sure.",
      "parentUuid": "f29c864f_2734bc1f",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 54,
        "endChar": 25
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e23844ff_d94759aa",
        "filename": "pce/src/test/java/org/opendaylight/transportpce/pce/frequency/FrequencyIntervalFactoryTest.java",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-23T12:26:56Z",
      "side": 1,
      "message": "Would you mind just adding one comment saying something like #checking independance between Slot and Range in FrequencyIntervalFactory operation...?\n\nUnderstand that you don\u0027t want to make this factory responsible for validating user input. Do you think it would however make sense to add in the code checking the input (somewhere in the ServiceHandler...) a test on the consistence of both ?",
      "parentUuid": "644891c4_518c1756",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 54,
        "endChar": 25
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69c4425c_0db184bd",
        "filename": "pce/src/test/java/org/opendaylight/transportpce/pce/frequency/interval/IntervalCollectionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-18T16:25:55Z",
      "side": 1,
      "message": "Any reason why you set frequency that are not corresponding to the bits you set in the BitSet : is it to show independence of frequency with the grid/slot-index we usually use (6.25GHz, 768 bit) in your approach?",
      "range": {
        "startLine": 32,
        "startChar": 8,
        "endLine": 37,
        "endChar": 24
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6551c208_cb626641",
        "filename": "pce/src/test/java/org/opendaylight/transportpce/pce/frequency/interval/IntervalCollectionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 9231
      },
      "writtenOn": "2024-10-21T11:59:56Z",
      "side": 1,
      "message": "Yes, I wanted this test to work independently. Also, it save me the work of figuring out the actual slot nr since they don\u0027t really matter that much. It\u0027s the intersection",
      "parentUuid": "69c4425c_0db184bd",
      "range": {
        "startLine": 32,
        "startChar": 8,
        "endLine": 37,
        "endChar": 24
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c830cd5b_81e725e4",
        "filename": "pce/src/test/java/org/opendaylight/transportpce/pce/frequency/interval/IntervalCollectionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-23T12:26:56Z",
      "side": 1,
      "message": "Same as previous comment: could you just add a simple comment to explain it (just for the people who may debug later on a test that could fail after they added inconsistent code, and might be suprised by the test settings)?",
      "parentUuid": "6551c208_cb626641",
      "range": {
        "startLine": 32,
        "startChar": 8,
        "endLine": 37,
        "endChar": 24
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6ff6e8b_0f31b4a3",
        "filename": "pce/src/test/java/org/opendaylight/transportpce/pce/frequency/interval/IntervalCollectionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 193,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-18T16:25:55Z",
      "side": 1,
      "message": "Would it make sense to have exactly the same test (same one and available) for intersection to check that we have a different behavior. I would expect no more an empty bitset to be returned but expected.set(15,20) as the result; if I correctly understood but I am not so sure :-(",
      "range": {
        "startLine": 183,
        "startChar": 3,
        "endLine": 193,
        "endChar": 30
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1936df57_c25aab7c",
        "filename": "pce/src/test/java/org/opendaylight/transportpce/pce/frequency/interval/IntervalCollectionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 193,
      "author": {
        "id": 9231
      },
      "writtenOn": "2024-10-21T11:59:56Z",
      "side": 1,
      "message": "Yes, the intersection would return `expected.set(15,20)`.\nAlright, I\u0027ll add that test.",
      "parentUuid": "a6ff6e8b_0f31b4a3",
      "range": {
        "startLine": 183,
        "startChar": 3,
        "endLine": 193,
        "endChar": 30
      },
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3aad736_f353c3bb",
        "filename": "pce/src/test/java/org/opendaylight/transportpce/pce/frequency/service/ServiceFrequencyTest.java",
        "patchSetId": 1
      },
      "lineNbr": 165,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-18T16:25:55Z",
      "side": 1,
      "message": "I think we really need to change the name of the leaf slot-width (see comment in yang file)",
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6a3ffaf_5371f6b9",
        "filename": "pce/src/test/java/org/opendaylight/transportpce/pce/frequency/service/ServiceFrequencyTest.java",
        "patchSetId": 1
      },
      "lineNbr": 165,
      "author": {
        "id": 9231
      },
      "writtenOn": "2024-10-21T11:59:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d3aad736_f353c3bb",
      "revId": "d2c8c3d33559a40572256f3b09991f0b6cf327d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}