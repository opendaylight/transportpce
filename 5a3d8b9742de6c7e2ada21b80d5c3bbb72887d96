{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e4cdc016_bd12c7a6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-01-14T08:55:22Z",
      "side": 1,
      "message": "docs-linkcheck failure is due to a connectivity isue on the gate so false positive\n\nbut still verified -1\npre-commit autopep8 considers the indentation is wrong in the python script\n\n\n20:08:47 --- a/tests/transportpce_tests/hybrid/test02_B100G_end2end.py\n20:08:47 +++ b/tests/transportpce_tests/hybrid/test02_B100G_end2end.py\n20:08:47 @@ -1137,6 +1137,7 @@ class TransportPCEtesting(unittest.TestCase):\n20:08:47  \n20:08:47  # test service-create for 400GE service from xpdra2 to xpdrc2\n20:08:47  \n20:08:47 +\n20:08:47      def test_72_create_400GE_service(self):\n20:08:47          self.cr_serv_sample_data[\"input\"][\"service-name\"] \u003d \"service-400GE\"\n20:08:47          self.cr_serv_sample_data[\"input\"][\"service-a-end\"][\"service-rate\"] \u003d \"400\"\n20:08:47 @@ -1396,27 +1397,26 @@ class TransportPCEtesting(unittest.TestCase):\n20:08:47                               res[\u0027interface\u0027][0][\u0027org-openroadm-otn-odu-interfaces:odu\u0027][\u0027opu\u0027])\n20:08:47          self.assertDictEqual(dict(input_dict_4,\n20:08:47                                    **res[\u0027interface\u0027][0][\u0027org-openroadm-otn-odu-interfaces:odu\u0027][\n20:08:47 -                                    \u0027parent-odu-allocation\u0027]),\n20:08:47 +                                      \u0027parent-odu-allocation\u0027]),\n20:08:47                               res[\u0027interface\u0027][0][\u0027org-openroadm-otn-odu-interfaces:odu\u0027][\u0027parent-odu-allocation\u0027])\n20:08:47          self.assertIn(\u00271.1\u0027, res[\u0027interface\u0027][0][\u0027org-openroadm-otn-odu-interfaces:odu\u0027][\u0027parent-odu-allocation\u0027]\n20:08:47 -            [\u0027opucn-trib-slots\u0027])\n20:08:47 +                      [\u0027opucn-trib-slots\u0027])\n20:08:47          self.assertIn(\u00271.20\u0027, res[\u0027interface\u0027][0][\u0027org-openroadm-otn-odu-interfaces:odu\u0027][\u0027parent-odu-allocation\u0027]\n20:08:47 -            [\u0027opucn-trib-slots\u0027])\n20:08:47 +                      [\u0027opucn-trib-slots\u0027])\n20:08:47          self.assertIn(\u00272.1\u0027, res[\u0027interface\u0027][0][\u0027org-openroadm-otn-odu-interfaces:odu\u0027][\u0027parent-odu-allocation\u0027]\n20:08:47 -            [\u0027opucn-trib-slots\u0027])\n20:08:47 +                      [\u0027opucn-trib-slots\u0027])\n20:08:47          self.assertIn(\u00272.20\u0027, res[\u0027interface\u0027][0][\u0027org-openroadm-otn-odu-interfaces:odu\u0027][\u0027parent-odu-allocation\u0027]\n20:08:47 -            [\u0027opucn-trib-slots\u0027])\n20:08:47 +                      [\u0027opucn-trib-slots\u0027])\n20:08:47          self.assertIn(\u00273.1\u0027, res[\u0027interface\u0027][0][\u0027org-openroadm-otn-odu-interfaces:odu\u0027][\u0027parent-odu-allocation\u0027]\n20:08:47 -            [\u0027opucn-trib-slots\u0027])\n20:08:47 +                      [\u0027opucn-trib-slots\u0027])\n20:08:47          self.assertIn(\u00273.20\u0027, res[\u0027interface\u0027][0][\u0027org-openroadm-otn-odu-interfaces:odu\u0027][\u0027parent-odu-allocation\u0027]\n20:08:47 -            [\u0027opucn-trib-slots\u0027])\n20:08:47 +                      [\u0027opucn-trib-slots\u0027])\n20:08:47          self.assertIn(\u00274.1\u0027, res[\u0027interface\u0027][0][\u0027org-openroadm-otn-odu-interfaces:odu\u0027][\u0027parent-odu-allocation\u0027]\n20:08:47 -            [\u0027opucn-trib-slots\u0027])\n20:08:47 +                      [\u0027opucn-trib-slots\u0027])\n20:08:47          self.assertIn(\u00274.20\u0027, res[\u0027interface\u0027][0][\u0027org-openroadm-otn-odu-interfaces:odu\u0027][\u0027parent-odu-allocation\u0027]\n20:08:47 -            [\u0027opucn-trib-slots\u0027])\n20:08:47 +                      [\u0027opucn-trib-slots\u0027])\n20:08:47          self.assertEqual(\u0027XPDR1-NETWORK1-ODUC4\u0027, res[\u0027interface\u0027][0][\u0027supporting-interface-list\u0027][0])\n20:08:47  \n20:08:47 -\n20:08:47      def test_83_delete_400GE_service(self):\n20:08:47          response \u003d test_utils.service_delete_request(\"service-400GE\")\n\n/w/workspace/transportpce-tox-verify-sulfur/docs/tox-guide.rst:109: WARNING: broken link: https://pre-commit.com/ (HTTPSConnectionPool(host\u003d\u0027pre-commit.com\u0027, port\u003d443): Max retries exceeded with url: / (Caused by NewConnectionError(\u0027\u003curllib3.connection.HTTPSConnection object at 0x7fc7584052b0\u003e: Failed to establish a new connection: [Errno -2] Name or service not known\u0027,)))\n20:08:47          self.assertEqual(response.status_code, requests.codes.ok)\n20:08:47 ERROR: InvocationError for command /w/workspace/transportpce-tox-verify-sulfur/.tox/pre-commit/bin/pre-commit run --all-files --show-diff-on-failure (exited with code 1)\n20:08:47 ERROR: invocation failed (exit code 1)\n20:08:47 âœ– FAIL pre-commit in 24.427 seconds",
      "revId": "5a3d8b9742de6c7e2ada21b80d5c3bbb72887d96",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}