{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "165accc3_bcdb13a5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-02-08T20:19:29Z",
      "side": 1,
      "message": "Unfortunately we often have to duplicate code between portmapping implementation versions.\n\nPlease can you confirm or not that there is also 2 ways with 1.2.1 or 7.1 portmapping\nand that they are not yet or already implemented ?",
      "revId": "d90c92e08c227e1270789ffde51d1d66fc55ba2c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3052f49b_427f62e1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 8529
      },
      "writtenOn": "2022-02-09T01:03:30Z",
      "side": 1,
      "message": "7.1 does not have supported-interface-capability leaf list, so no change in 7.1 port-mapping.\nYes, 1.2.1 is same as 2.2.1, so we will need to modify that as well. But, again since there are no 1.2.1 devices, I won\u0027t be able to verify in the lab.",
      "parentUuid": "165accc3_bcdb13a5",
      "revId": "d90c92e08c227e1270789ffde51d1d66fc55ba2c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63083cfe_58eb52b1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-02-11T13:57:25Z",
      "side": 1,
      "message": "OK looking at 1.2.1 portmapping\nThe first method is not even implemented.\n\nI don\u0027t think there is a chance this code would affect the device behavior.\nAm I wrong ?\n\nI am adding a new change on top of this one so that we can properly discuss and address this.\nhttps://git.opendaylight.org/gerrit/c/transportpce/+/99692\nIt\u0027s WIP because I am not sure at all of the revision dates to use and it seems there is no Ports1 and port.capability models with a different revision.\nSo I don\u0027t know what to put there.",
      "parentUuid": "3052f49b_427f62e1",
      "revId": "d90c92e08c227e1270789ffde51d1d66fc55ba2c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02e53b63_0f12ee97",
        "filename": "common/src/main/java/org/opendaylight/transportpce/common/mapping/PortMappingVersion221.java",
        "patchSetId": 1
      },
      "lineNbr": 882,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-02-08T20:16:19Z",
      "side": 1,
      "message": "I think this check is useless: if supInfcap is null the for-loop below won\u0027t be executed\n\nalso a direct allocation would be more straight forward than the intermediate function getSupInfCap that seems used only once here.\nIt would give\n} else {\n    Collection\u003cSupportedInterfaceCapability\u003e supInfcap \u003d\n            port.augmentation(Ports1.class) \u003d\u003d null || port.augmentation(Ports1.class).getPortCapabilities() \u003d\u003d null\n                ? null\n                : port.augmentation(Ports1.class)\n                    .getPortCapabilities().getSupportedInterfaceCapability().values();\n\n\nthat could be simplified in\n\n} else if (port.augmentation(Ports1.class) !\u003d null \u0026\u0026 port.augmentation(Ports1.class).getPortCapabilities() !\u003d null) {\n    Collection\u003cSupportedInterfaceCapability\u003e supInfcap \u003d \n        port.augmentation(Ports1.class).getPortCapabilities().getSupportedInterfaceCapability().values();\n\nMoreover the for-loop content below is pretty the same than the old one above at the difference that .getIfCapType() is applied to every sup item encountered.\n\nTherefore, I think the parent if/else block proposed here should be only applied to the collection/list and not the for-loop itself.\nA new compatible list (i.e similar to port.getSupportedInterfaceCapability() ) could be created from supInfcap with a stream that applies .getIfCapType() to every element.",
      "revId": "d90c92e08c227e1270789ffde51d1d66fc55ba2c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91bd2ffa_c09685f4",
        "filename": "common/src/main/java/org/opendaylight/transportpce/common/mapping/PortMappingVersion221.java",
        "patchSetId": 1
      },
      "lineNbr": 882,
      "author": {
        "id": 8529
      },
      "writtenOn": "2022-02-09T01:03:30Z",
      "side": 1,
      "message": "I\u0027m having difficulty in writing the way you mentioned. Perhaps, if you can help me, I will modify the code accordingly.",
      "parentUuid": "02e53b63_0f12ee97",
      "revId": "d90c92e08c227e1270789ffde51d1d66fc55ba2c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64e0f10a_d6a20430",
        "filename": "common/src/main/java/org/opendaylight/transportpce/common/mapping/PortMappingVersion221.java",
        "patchSetId": 1
      },
      "lineNbr": 882,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-02-11T13:57:25Z",
      "side": 1,
      "message": "My mistake, my comment was very confusing, not to say partially false.\n\nNull List raises NPE with for-loop.\nI was meaning indeed that your function should return an empty List instead of null so that the for-loop is not executed.\nEmpty lists are naturally generated when using streams.\n\nHere is my proposal with this new PS.\n\nHope this helps",
      "parentUuid": "91bd2ffa_c09685f4",
      "revId": "d90c92e08c227e1270789ffde51d1d66fc55ba2c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}