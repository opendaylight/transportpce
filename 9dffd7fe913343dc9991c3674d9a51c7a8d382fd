{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "83c614d8_7319a5f7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6731
      },
      "writtenOn": "2023-12-14T09:38:40Z",
      "side": 1,
      "message": "recheck",
      "revId": "9dffd7fe913343dc9991c3674d9a51c7a8d382fd",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ef73cbc_822ccb12",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6731
      },
      "writtenOn": "2023-12-14T09:58:42Z",
      "side": 1,
      "message": "Thanks Joachim for this fox proposal.\nHere are a few potential improvements proposal in the code.\nI run a recheck on the CI to see if the failure was not due to an infra issue in LFN Jenkins.\nHope this helps\nGuillaume",
      "revId": "9dffd7fe913343dc9991c3674d9a51c7a8d382fd",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2531a176_301f6fcc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6731
      },
      "writtenOn": "2023-12-14T10:00:31Z",
      "side": 1,
      "message": "Joachim -\u003e Joakim\nsorry to have mispelled your first name",
      "parentUuid": "2ef73cbc_822ccb12",
      "revId": "9dffd7fe913343dc9991c3674d9a51c7a8d382fd",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72439374_9fafe504",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9231
      },
      "writtenOn": "2023-12-14T13:24:15Z",
      "side": 1,
      "message": "No worries ðŸ˜Š",
      "parentUuid": "2531a176_301f6fcc",
      "revId": "9dffd7fe913343dc9991c3674d9a51c7a8d382fd",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d82cfbc7_55ded2f9",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/graph/PostAlgoPathValidator.java",
        "patchSetId": 1
      },
      "lineNbr": 1019,
      "author": {
        "id": 6731
      },
      "writtenOn": "2023-12-14T09:58:42Z",
      "side": 1,
      "message": "edge.link().getSourceId() and ..DestId() are used at least twice and deserve an intermediate var IMO",
      "revId": "9dffd7fe913343dc9991c3674d9a51c7a8d382fd",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14b939a7_6e6db06f",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/graph/PostAlgoPathValidator.java",
        "patchSetId": 1
      },
      "lineNbr": 1019,
      "author": {
        "id": 9231
      },
      "writtenOn": "2023-12-14T13:21:11Z",
      "side": 1,
      "message": "Good point. I agree.",
      "parentUuid": "d82cfbc7_55ded2f9",
      "revId": "9dffd7fe913343dc9991c3674d9a51c7a8d382fd",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa4f8a02_f4415488",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/graph/PostAlgoPathValidator.java",
        "patchSetId": 1
      },
      "lineNbr": 1046,
      "author": {
        "id": 6731
      },
      "writtenOn": "2023-12-14T09:58:42Z",
      "side": 1,
      "message": "What about this ?\n\n        for (PceNode pceNode : pceNodes) {\n            LOG.debug(\"Processing PCE node {}\", pceNode);\n            pceNodeFreqMap \u003d pceNode.getBitSetData();\n            LOG.debug(\"Pce node bitset {}\", pceNodeFreqMap);\n            if (pceNodeFreqMap !\u003d null) {\n                result.and(pceNodeFreqMap);\n                LOG.debug(\"intermediate bitset {}\", result);\n            }\n\n            String pceNodeVersion \u003d pceNode.getVersion();\n            BigDecimal sltWdthGran \u003d pceNode.getSlotWidthGranularity();\n            if (StringConstants.OPENROADM_DEVICE_VERSION_1_2_1.equals(pceNodeVersion)) {\n                LOG.debug(\"Node {}: version is {} and slot width granularity is {} -\u003e fixed grid mode\",\n                    pceNode.getNodeId(), pceNodeVersion, sltWdthGran);\n                isFlexGrid \u003d false;\n                continue;\n            }\n\n            if (!sltWdthGran.setScale(0, RoundingMode.CEILING).equals(GridConstant.SLOT_WIDTH_50)){\n                continue;\n            }\n            BigDecimal ctralFreqGran \u003d pceNode.getCentralFreqGranularity();\n            if (!ctralFreqGran.setScale(0, RoundingMode.CEILING).equals(GridConstant.SLOT_WIDTH_50)) {\n                continue;\n            }\n            LOG.debug(\"Node {}: version is {} with slot width granularity {} and central \"\n                    + \"frequency granularity is {} -\u003e fixed grid mode\",\n                pceNode.getNodeId(), pceNodeVersion, sltWdthGran, ctralFreqGran);\n            isFlexGrid \u003d false;\n        }",
      "revId": "9dffd7fe913343dc9991c3674d9a51c7a8d382fd",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}