{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fe3af6db_009e55af",
        "filename": "networkmodel/src/main/java/org/opendaylight/transportpce/networkmodel/util/OpenRoadmOtnTopology.java",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-01-24T09:56:47Z",
      "side": 1,
      "message": "link.augmentation(Link1.class) !\u003d null can be factorized\n\nPerhaps it is worth starting with a guard clause\n\nif ( link.augmentation(Link1.class) \u003d\u003d null ){\n     LOG.error(\"....\", link.getLinkId().getValue());\n     continue;\n}",
      "revId": "a910c0a2a5409bf8f3b01c5772875010c378a8db",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89b0c498_7efa7d99",
        "filename": "networkmodel/src/main/java/org/opendaylight/transportpce/networkmodel/util/OpenRoadmOtnTopology.java",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 8529
      },
      "writtenOn": "2022-01-28T06:17:53Z",
      "side": 1,
      "message": "I would differ it to Gilles/Christophe. I made as minimal change as possible to get this feature in.",
      "parentUuid": "fe3af6db_009e55af",
      "revId": "a910c0a2a5409bf8f3b01c5772875010c378a8db",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba629a9a_135e27e9",
        "filename": "networkmodel/src/main/java/org/opendaylight/transportpce/networkmodel/util/OpenRoadmOtnTopology.java",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-01-29T22:47:58Z",
      "side": 1,
      "message": "I am fine with differing the rest of the refactoring later as suggested below.\nBut there will be a lot of work to do and it won\u0027t probably be achieved in one commit.\nThe factorization I am asking here is not really complex.\nSo I\u0027d prefer we address at least this particular issue directly in this change in order to decrease the remaining amount of refactoring work.\n\nBelow is the resulting piece of code after factorizing this condition.\n\n\n        for (Link link : suppOtuLinks) {\n            if(link.augmentation(Link1.class) \u003d\u003d null) {\n                LOG.error(\"Error with otn parameters of supported link {}\", link.getLinkId().getValue());\n                continue;\n            }\n            if (OtnLinkType.ODTU4.equals(linkType)\n                \u0026\u0026 link.augmentation(Link1.class).getAvailableBandwidth().equals(Uint32.valueOf(100000))) {\n                links.add(updateOtnLinkBwParameters(link, 0L, 100000L));\n            } else if (OtnLinkType.ODUC4.equals(linkType)\n                \u0026\u0026 link.augmentation(Link1.class).getAvailableBandwidth().equals(Uint32.valueOf(400000))) {\n                links.add(updateOtnLinkBwParameters(link, 0L, 400000L));\n            } else if (OtnLinkType.ODUC3.equals(linkType)\n                \u0026\u0026 link.augmentation(Link1.class).getAvailableBandwidth().equals(Uint32.valueOf(300000))) {\n                links.add(updateOtnLinkBwParameters(link, 0L, 300000L));\n            } else if (OtnLinkType.ODUC2.equals(linkType)\n                \u0026\u0026 link.augmentation(Link1.class).getAvailableBandwidth().equals(Uint32.valueOf(200000))) {\n                links.add(updateOtnLinkBwParameters(link, 0L, 200000L));\n            } else {\n                LOG.error(\"Error with otn parameters of supported link {}\", link.getLinkId().getValue());\n            }\n        }",
      "parentUuid": "89b0c498_7efa7d99",
      "revId": "a910c0a2a5409bf8f3b01c5772875010c378a8db",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76e27f8a_a985d0ba",
        "filename": "networkmodel/src/main/java/org/opendaylight/transportpce/networkmodel/util/OpenRoadmOtnTopology.java",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 8529
      },
      "writtenOn": "2022-01-30T00:27:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ba629a9a_135e27e9",
      "revId": "a910c0a2a5409bf8f3b01c5772875010c378a8db",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51c46de3_e1139d43",
        "filename": "networkmodel/src/main/java/org/opendaylight/transportpce/networkmodel/util/OpenRoadmOtnTopology.java",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 8529
      },
      "writtenOn": "2022-01-30T00:28:06Z",
      "side": 1,
      "message": "I will work on it! Thanks Guillaume",
      "parentUuid": "76e27f8a_a985d0ba",
      "revId": "a910c0a2a5409bf8f3b01c5772875010c378a8db",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd4c8e64_4724a0e1",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/networkanalyzer/PceOtnNode.java",
        "patchSetId": 2
      },
      "lineNbr": 202,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-01-24T09:56:47Z",
      "side": 1,
      "message": "the cyclomatic complexity is already huge... And it becomes difficult to read IMO.\nMaybe some refactoring and intermediate functions would be first welcome here.",
      "revId": "a910c0a2a5409bf8f3b01c5772875010c378a8db",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e7fc47c_ee4649af",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/networkanalyzer/PceOtnNode.java",
        "patchSetId": 2
      },
      "lineNbr": 202,
      "author": {
        "id": 8529
      },
      "writtenOn": "2022-01-28T06:17:53Z",
      "side": 1,
      "message": "Yes, understood. Can we differ the refactoring to later?",
      "parentUuid": "dd4c8e64_4724a0e1",
      "revId": "a910c0a2a5409bf8f3b01c5772875010c378a8db",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}