{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fe3af6db_009e55af",
        "filename": "networkmodel/src/main/java/org/opendaylight/transportpce/networkmodel/util/OpenRoadmOtnTopology.java",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-01-24T09:56:47Z",
      "side": 1,
      "message": "link.augmentation(Link1.class) !\u003d null can be factorized\n\nPerhaps it is worth starting with a guard clause\n\nif ( link.augmentation(Link1.class) \u003d\u003d null ){\n     LOG.error(\"....\", link.getLinkId().getValue());\n     continue;\n}",
      "revId": "a910c0a2a5409bf8f3b01c5772875010c378a8db",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd4c8e64_4724a0e1",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/networkanalyzer/PceOtnNode.java",
        "patchSetId": 2
      },
      "lineNbr": 202,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-01-24T09:56:47Z",
      "side": 1,
      "message": "the cyclomatic complexity is already huge... And it becomes difficult to read IMO.\nMaybe some refactoring and intermediate functions would be first welcome here.",
      "revId": "a910c0a2a5409bf8f3b01c5772875010c378a8db",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}