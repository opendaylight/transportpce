{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "67834d33_461742f4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-03-31T09:30:30Z",
      "side": 1,
      "message": "LGTM though I think there is room to some optimizations here",
      "revId": "b2329211d927176e4d1b573f74022a09493de554",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe809486_cdc1657c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 7446
      },
      "writtenOn": "2022-03-31T11:55:59Z",
      "side": 1,
      "message": "Thanks for your review. See my answers.",
      "revId": "b2329211d927176e4d1b573f74022a09493de554",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "555e24d1_7fad5c3e",
        "filename": "servicehandler/src/main/java/org/opendaylight/transportpce/servicehandler/DowngradeConstraints.java",
        "patchSetId": 6
      },
      "lineNbr": 289,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-03-31T09:30:30Z",
      "side": 1,
      "message": "what about this ?\n\nString maxWdmHc \u003d\n    soft.getMaxWdmHopCount() \u003d\u003d null\n        ? hard.getMaxWdmHopCount() \u003d\u003d null\n            ? null\n            : hard.getMaxWdmHopCount().toString()\n        :  hard.getMaxWdmHopCount() \u003d\u003d null\n            ? soft.getMaxWdmHopCount().toString()\n            : soft.getMaxWdmHopCount().intValue() \u003c\u003d hard.getMaxWdmHopCount().intValue()\n                ? soft.getMaxWdmHopCount().toString()\n                : hard.getMaxWdmHopCount().toString();",
      "revId": "b2329211d927176e4d1b573f74022a09493de554",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bae7d6e1_8bbc2f59",
        "filename": "servicehandler/src/main/java/org/opendaylight/transportpce/servicehandler/DowngradeConstraints.java",
        "patchSetId": 6
      },
      "lineNbr": 289,
      "author": {
        "id": 7446
      },
      "writtenOn": "2022-03-31T11:55:59Z",
      "side": 1,
      "message": "Your proposal based on nested ternary operators is true, but personally, I find it completely unreadable!\nI would prefer an optimization based on classical if-then-else strcuture...",
      "parentUuid": "555e24d1_7fad5c3e",
      "revId": "b2329211d927176e4d1b573f74022a09493de554",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29d78b5a_2fc54b3a",
        "filename": "servicehandler/src/main/java/org/opendaylight/transportpce/servicehandler/DowngradeConstraints.java",
        "patchSetId": 6
      },
      "lineNbr": 289,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-04-01T09:18:07Z",
      "side": 1,
      "message": "This comment purpose is mostly to indicate that\nsoft.getMaxWdmHopCount() and hard.getMaxWdmHopCount() nullness are sometimes evaluated twice, what can be avoided.\nI agree this can be adressed with nested if-structures also.\n\nBoth nested if-structures and ternary operators can be advertised by Sonar.\nSo I proposed nested ternary operators because I think they are more readable than nested if-structures in that case.\nBut I agree they might sound less readable for people not used to them.\nNote specialists opinions vary on the topic.\nYou can have more details here at this URL\nhttps://medium.com/javascript-scene/nested-ternaries-are-great-361bddd0f340\n\nIn that particular case, with a good indentation and LF placements, the variable allocation is presented under a tree formatting, what is quite convenient for experienced users to evaluate cases when occurs a particular value.\n\nThis is also more aligned with coding style remarks we add on the previous change about having a code more compact.\n\nThat said, this might be a little more optimized by inverting the nullness checks orderto reduce the nesting imbrications...",
      "parentUuid": "bae7d6e1_8bbc2f59",
      "revId": "b2329211d927176e4d1b573f74022a09493de554",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eab7cc2b_021e2b69",
        "filename": "servicehandler/src/main/java/org/opendaylight/transportpce/servicehandler/DowngradeConstraints.java",
        "patchSetId": 6
      },
      "lineNbr": 299,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-03-31T09:30:30Z",
      "side": 1,
      "message": "idem etc",
      "revId": "b2329211d927176e4d1b573f74022a09493de554",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06b0902f_e3f3b972",
        "filename": "servicehandler/src/main/java/org/opendaylight/transportpce/servicehandler/DowngradeConstraints.java",
        "patchSetId": 6
      },
      "lineNbr": 384,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-03-31T09:30:30Z",
      "side": 1,
      "message": "a ternoray operator is more indicated here IMO",
      "revId": "b2329211d927176e4d1b573f74022a09493de554",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9c19793_80d1b406",
        "filename": "servicehandler/src/main/java/org/opendaylight/transportpce/servicehandler/DowngradeConstraints.java",
        "patchSetId": 6
      },
      "lineNbr": 384,
      "author": {
        "id": 7446
      },
      "writtenOn": "2022-03-31T11:55:59Z",
      "side": 1,
      "message": "For here, since this is not a nested case, I agree to use ternary operator.",
      "parentUuid": "06b0902f_e3f3b972",
      "revId": "b2329211d927176e4d1b573f74022a09493de554",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ffd7195e_1a7080e7",
        "filename": "servicehandler/src/main/java/org/opendaylight/transportpce/servicehandler/DowngradeConstraints.java",
        "patchSetId": 6
      },
      "lineNbr": 384,
      "author": {
        "id": 7446
      },
      "writtenOn": "2022-04-01T14:14:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b9c19793_80d1b406",
      "revId": "b2329211d927176e4d1b573f74022a09493de554",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d98d0b0c_86db0822",
        "filename": "servicehandler/src/test/java/org/opendaylight/transportpce/servicehandler/DowngradeConstraintsTest.java",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-03-31T09:30:30Z",
      "side": 1,
      "message": "I would have preferred a LF after equal from a readability standpoint.\n\n        HardConstraints initialHardConstraints \u003d\n            buildHardConstraint(null, false, null, null, null, null, false, false, null, null);",
      "revId": "b2329211d927176e4d1b573f74022a09493de554",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da07afe1_0bb5a9d2",
        "filename": "servicehandler/src/test/java/org/opendaylight/transportpce/servicehandler/DowngradeConstraintsTest.java",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 7446
      },
      "writtenOn": "2022-04-01T14:14:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d98d0b0c_86db0822",
      "revId": "b2329211d927176e4d1b573f74022a09493de554",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b9de82a_387eb1ca",
        "filename": "servicehandler/src/test/java/org/opendaylight/transportpce/servicehandler/DowngradeConstraintsTest.java",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-03-31T09:30:30Z",
      "side": 1,
      "message": "idem etc",
      "revId": "b2329211d927176e4d1b573f74022a09493de554",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7510be7b_710e454b",
        "filename": "servicehandler/src/test/java/org/opendaylight/transportpce/servicehandler/DowngradeConstraintsTest.java",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 7446
      },
      "writtenOn": "2022-04-01T14:14:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b9de82a_387eb1ca",
      "revId": "b2329211d927176e4d1b573f74022a09493de554",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af176f46_791d7a82",
        "filename": "servicehandler/src/test/java/org/opendaylight/transportpce/servicehandler/utils/ConstraintsUtils.java",
        "patchSetId": 6
      },
      "lineNbr": 232,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-03-31T09:30:30Z",
      "side": 1,
      "message": "I don\u0027t think intermediate variables are required here",
      "revId": "b2329211d927176e4d1b573f74022a09493de554",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4552502e_bd009df8",
        "filename": "servicehandler/src/test/java/org/opendaylight/transportpce/servicehandler/utils/ConstraintsUtils.java",
        "patchSetId": 6
      },
      "lineNbr": 232,
      "author": {
        "id": 7446
      },
      "writtenOn": "2022-03-31T11:55:59Z",
      "side": 1,
      "message": "Inntermediate variables are not theorically required. But, given the diversity of objects to put on the Map, it really eases the readability and any future modifications on them.",
      "parentUuid": "af176f46_791d7a82",
      "revId": "b2329211d927176e4d1b573f74022a09493de554",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c956ec8_bfdee31a",
        "filename": "servicehandler/src/test/java/org/opendaylight/transportpce/servicehandler/utils/ConstraintsUtils.java",
        "patchSetId": 6
      },
      "lineNbr": 267,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-03-31T09:30:30Z",
      "side": 1,
      "message": "idem",
      "revId": "b2329211d927176e4d1b573f74022a09493de554",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c160d67e_a1b1dc84",
        "filename": "servicehandler/src/test/java/org/opendaylight/transportpce/servicehandler/utils/ConstraintsUtils.java",
        "patchSetId": 6
      },
      "lineNbr": 297,
      "author": {
        "id": 6731
      },
      "writtenOn": "2022-03-31T09:30:30Z",
      "side": 1,
      "message": "idem",
      "revId": "b2329211d927176e4d1b573f74022a09493de554",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}