[tox]
minversion = 1.6
envlist = py3
    docs
    docs-linkcheck
skipsdist = true
setupdir = tests/

[testenv]
passenv = USE_LIGHTY
usedevelop = True
basepython = python3
deps =
  -r{toxinidir}/tests/requirements.txt
  -r{toxinidir}/tests/test-requirements.txt
whitelist_externals = bash
                      sudo
changedir={toxinidir}/tests
commands =
  {py3,portmapping,topoPortMapping,rspn,topology,pce,olm,end2end,portmapping221,rspn221,topology221,otntopology,olm221,end2end221,gnpy}: - bash -c "if [ ! `which mvn` ]; then ./installMavenCentOS.sh  ; fi"
  {py3,portmapping,topoPortMapping,rspn,topology,olm,end2end}: - bash -c "./buildHoneynode.sh"
  {py3,portmapping,topoPortMapping,rspn,topology,olm,end2end,portmapping221,rspn221,topology221,otn-topology,olm221,end2end221}: - bash -c "sed 's@=.*//#FUNCTESTVAL=@=@g' ../olm/src/main/java/org/opendaylight/transportpce/olm/util/OlmUtils.java >/tmp/pivot; mv /tmp/pivot ../olm/src/main/java/org/opendaylight/transportpce/olm/util/OlmUtils.java"
  {py3,portmapping,topoPortMapping,rspn,topology,pce,olm,end2end,portmapping221,rspn221,topology221,otntopology,olm221,end2end221,gnpy}: - bash -c "cd .. && mvn clean install -s tests/odl_settings.xml -DskipTests -Dmaven.javadoc.skip=true"
  {py3,portmapping,topoPortMapping,rspn,topology,pce,olm,end2end,portmapping221,rspn221,topology221,otntopology,olm221,end2end221,gnpy}: - bash -c 'if [ "$USE_LIGHTY" == "True" ]; then (cd ../lighty && ./build.sh); fi'
  {py3,portmapping}: nosetests --with-xunit transportpce_tests/1.2.1/test_portmapping.py
  {py3,topoPortMapping}: nosetests --with-xunit transportpce_tests/1.2.1/test_topoPortMapping.py
  {py3,topology}: nosetests --with-xunit transportpce_tests/1.2.1/test_topology.py
  {py3,rspn}: nosetests --with-xunit transportpce_tests/1.2.1/test_renderer_service_path_nominal.py
  {py3,pce}: nosetests --with-xunit transportpce_tests/1.2.1/test_pce.py
  {py3,olm}: nosetests --with-xunit transportpce_tests/1.2.1/test_olm.py
  {end2end}: nosetests --with-xunit transportpce_tests/1.2.1/test_end2end.py
  {py3,portmapping221,rspn221,topology221,otntopology,olm221,end2end221}: - bash -c "./buildHoneynode.sh 2.2.1"
  {py3,portmapping221}: nosetests --with-xunit transportpce_tests/2.2.1/test_portmapping.py
  {py3,topology221}: nosetests --with-xunit transportpce_tests/2.2.1/test_topology.py
  {otntopology}: nosetests --with-xunit transportpce_tests/2.2.1/test_otn_topology.py
  {py3,rspn221}: nosetests --with-xunit transportpce_tests/2.2.1/test_renderer_service_path_nominal.py
  {py3,olm221}: nosetests --with-xunit transportpce_tests/2.2.1/test_olm.py
  {end2end221}: nosetests --with-xunit transportpce_tests/2.2.1/test_end2end.py
  #{gnpy}: - sudo docker pull atriki/gnpyrest:v1.1
  {gnpy}: - sudo docker run -d -p 8008:5000 --name gnpy_tpce_rest1 atriki/gnpyrest:v1.1
  {gnpy}: nosetests --with-xunit transportpce_tests/1.2.1/test_gnpy.py
  {gnpy}: - sudo docker container rm -f gnpy_tpce_rest1

[testenv:docs]
deps = -rdocs/requirements.txt
commands =
    sphinx-build -W -b html -n -d {envtmpdir}/doctrees ../docs/ {toxinidir}/docs/_build/html

[testenv:docs-linkcheck]
deps = -rdocs/requirements.txt
commands = sphinx-build -W -b linkcheck -d {envtmpdir}/doctrees ../docs/ {toxinidir}/docs/_build/linkcheck

