{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6449b6ff_0c401941",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 8358
      },
      "writtenOn": "2024-10-08T16:59:26Z",
      "side": 1,
      "message": "I\u0027m a bit confused about how nmc bandwidth is related to dedicated-signal-bandwidth-multiple. I don\u0027t necessarily think it\u0027s wrong to take min and max frequencies into account when setting nmc bandwidth but I just don\u0027t see how it\u0027s related to customer profiles. Isn\u0027t the allocated spectrum already defined by min and max frequency?",
      "revId": "58b870ce61ac96e953e4691003240aef0596e5b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20e1af40_669eb4b6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-17T16:53:59Z",
      "side": 1,
      "message": "In service model white paper, dedicated-signal-bandwidth-multiple of customer profile defines \"the granularity of the width for the channels to be provisioned in the spectrum portion\". \nIt could be used for different use cases (a signal passes through a part of the network where the spectrum allocation may be specific, the characteristics of the Transmitters are not fully mastered,...)\nThis constraint may not be expressed, meaning that we rely on the PCE to evaluate the width needed, derived from Operational mode or modulation-format \u0026 rate. \nIf it is, it means someone expressed a specific constraints. In this case a prefer to try to stick to the expressed constraint rather than deriving nmc from physical parameters of the transmitter that we may not fully master and using predefined values that may not fully reflect the reality: \nIf nmc-standard-calculation \u003c nmc-deduced-from(mc - default-guardband), I use the second. As default-guardBand I use 6.25 GHz on each side. Does it make sense to you?",
      "parentUuid": "6449b6ff_0c401941",
      "revId": "58b870ce61ac96e953e4691003240aef0596e5b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ddbc4e2_040d38ee",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 8358
      },
      "writtenOn": "2024-10-17T21:48:02Z",
      "side": 1,
      "message": "No, it does not make sense to me. The commit message says \"the dedicated-signal-\nbandwidth multiple is not consider by the controller to set the width\nof the ROADM connections. This patch corrects the bug.\" But this patch does not consider the dedicated-signal-bandwidth-multiple attribute (which is an actual attribute in the service model, right?) either so I don\u0027t see how that attribute is relevant. And I think that attribute would only be relevant to the MC width anyway, not directly to the NMC width, even if it were considered.",
      "parentUuid": "20e1af40_669eb4b6",
      "revId": "58b870ce61ac96e953e4691003240aef0596e5b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ccf7586_8da9c563",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-23T17:43:02Z",
      "side": 1,
      "message": "OK, my shortcut needs a bit of clarification. In the change I made to handle customer profiles, I considered dedicated-signal-bandwidth-multiple attribute to make the relevant calculation in the PostAlgoValidator. But we saw later on, that it was not correctly handled. Debugging, I saw that Mapping.Utils.rendererCreateServiceInputAtoZ/ZtoA is calculating nmc from GridConstants.FREQUENCY_WIDTH_TABLE, crushing what is done in PostAlgoValidator. In other terms, what\u0027s done in PAPV has no effect because the nmc is not extrapolated in MappingUtils from the result of the path computation. Does it clarify the commit message content?",
      "parentUuid": "6ddbc4e2_040d38ee",
      "revId": "58b870ce61ac96e953e4691003240aef0596e5b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6885f79f_4b14960b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 8358
      },
      "writtenOn": "2024-10-25T11:50:03Z",
      "side": 1,
      "message": "Ok, thanks, that is good background information that would probably be useful to have in the commit message as well. But like I wrote in another comment, I don\u0027t really think your solution is correct.",
      "parentUuid": "0ccf7586_8da9c563",
      "revId": "58b870ce61ac96e953e4691003240aef0596e5b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "545abee6_aebabc0b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-08T12:24:28Z",
      "side": 1,
      "message": "recheck",
      "revId": "58b870ce61ac96e953e4691003240aef0596e5b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "161e23d2_a1080372",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/graph/PostAlgoPathValidator.java",
        "patchSetId": 4
      },
      "lineNbr": 128,
      "author": {
        "id": 8358
      },
      "writtenOn": "2024-10-08T16:59:26Z",
      "side": 1,
      "message": "I don\u0027t understand how these changes are related to the description in the commit message.",
      "revId": "58b870ce61ac96e953e4691003240aef0596e5b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6a2d5dc_4d9cf53a",
        "filename": "pce/src/main/java/org/opendaylight/transportpce/pce/graph/PostAlgoPathValidator.java",
        "patchSetId": 4
      },
      "lineNbr": 128,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-17T16:53:59Z",
      "side": 1,
      "message": "You are right, this was not documented in the commit message. Realized while trying to solve that bug that the API was completed with additional parameters that we were still not feeding. Corrected the commit message.",
      "parentUuid": "161e23d2_a1080372",
      "revId": "58b870ce61ac96e953e4691003240aef0596e5b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4e38ce5_ebfe04cf",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/ModelMappingUtils.java",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 8358
      },
      "writtenOn": "2024-10-08T16:59:26Z",
      "side": 1,
      "message": "Why do you subtract exactly 12.5? I don\u0027t think there is anything that says nmc width has to be a multiple of slot width granularity?",
      "revId": "58b870ce61ac96e953e4691003240aef0596e5b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63cbd7dd_831e1486",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/ModelMappingUtils.java",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-17T16:53:59Z",
      "side": 1,
      "message": "Normally, NMC width is deduced from FrequencyWidthTable (line180) which will provide a value in accordance with the physical characteristics of the the TX.\nHowever when we need to respect a constraint imposed by dedicated-signal-bandwith, it could be that we need to allocate a slot that is larger than the what is derived from the physical characteristics of the the TX (Line183-187).\nIn this case I prefer to stick to the constraint (which may reflect a condition that we may not fully master (characteristic of a transmitter that does not follow OR specs), rather than filtering potentially too much the signal. As we have no real no way to evaluate the exact guard Band, I consider 6.25 GHz on each side which correspond to a default value, even if, I agree, a guard band may be lower than the elementary slot (6.25/2 is lower than the minimum guardband I have seen specified until now and which was 3.75 GHz). Does it make sense to you?",
      "parentUuid": "e4e38ce5_ebfe04cf",
      "revId": "58b870ce61ac96e953e4691003240aef0596e5b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78d8d7d2_bb890c0e",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/ModelMappingUtils.java",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 8358
      },
      "writtenOn": "2024-10-17T21:48:02Z",
      "side": 1,
      "message": "The OpenROADM device white paper considers a 4 GHz guard band on each side so that could be an alternative.",
      "parentUuid": "63cbd7dd_831e1486",
      "revId": "58b870ce61ac96e953e4691003240aef0596e5b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a28cc312_667ad029",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/ModelMappingUtils.java",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 7217
      },
      "writtenOn": "2024-10-23T17:43:02Z",
      "side": 1,
      "message": "This could be, but I think we may ask for confirmation during OpenRoadm Plenary The 4 GHz guardBand was defined at the origin with 100G signals. It has not been updated. It can be because it does not need to. It could also be that nobody saw it was there, with a potential need to be updated for higher rates. Not trying to argue, but just because the default value I use appeared in different presentations that were provided during B100G discussions. In other terms, I\u0027m not pulling it out of my hat, but just saw it several times. Now, to make it clear, I am not an optical expert...",
      "parentUuid": "78d8d7d2_bb890c0e",
      "revId": "58b870ce61ac96e953e4691003240aef0596e5b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fef9d61_5aa6250c",
        "filename": "renderer/src/main/java/org/opendaylight/transportpce/renderer/ModelMappingUtils.java",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 8358
      },
      "writtenOn": "2024-10-25T11:50:03Z",
      "side": 1,
      "message": "Ok, understood. I just think that if a number like that is hard-coded, it\u0027s nice to be able to point to some specification where that number is defined. Currently, the only defined number is 4 GHz per side so I think it makes sense to use that for now while also bringing it up in the OpenROADM plenary to see if it should be updated in the specs. But I think most people don\u0027t care that much about NMC width since it doesn\u0027t really impact ROADM configuration, except maybe for specific superchannel use cases, see also this old discussion:\nhttps://github.com/OpenROADM/OpenROADM_MSA_Public/issues/37\n\nBTW, is there some presentation you can point to that where the value you use appears?",
      "parentUuid": "a28cc312_667ad029",
      "revId": "58b870ce61ac96e953e4691003240aef0596e5b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}